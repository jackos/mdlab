{
  "name": "mdlab",
  "displayName": "Markdown Lab",
  "publisher": "jackos",
  "version": "0.7.0",
  "description": "Run markdown code blocks interactively in a notebook with any programming language, and generate code blocks with LLMs.",
  "main": "./out/extension.js",
  "icon": "mdlab.png",
  "categories": [
    "Notebooks",
    "Machine Learning",
    "Programming Languages"
  ],
  "keywords": [
    "markdown",
    "lab",
    "md",
    "notebook",
    "jupyter"
  ],
  "activationEvents": [
    "onNotebook:mdlab",
    "onCommand:mdlab.preview"
  ],
  "engines": {
    "vscode": "^1.96.0"
  },
  "repository": {
    "url": "https://github.com/jackos/mdlab"
  },
  "author": "Jack Clayton",
  "license": "ISC",
  "capabilities": {
    "virtualWorkspaces": true,
    "untrustedWorkspaces": {
      "supported": true
    }
  },
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "mdlab configuration",
      "properties": {
        "mdlab.basePath": {
          "description": "Path where searchable notes will be stored",
          "type": "string",
          "scope": "window"
        },
        "mdlab.openaiOrgID": {
          "type": "string",
          "default": "",
          "description": "Leave blank if not part of an org, get your org id at https://platform.openai.com/account/org-settings"
        },
        "mdlab.openaiKey": {
          "type": "string",
          "default": "",
          "description": "Set up an API key at: https://platform.openai.com/account/api-keys"
        },
        "mdlab.groqKey": {
          "type": "string",
          "default": "",
          "description": "Set up an API key at: https://console.groq.com/keys"
        },
        "mdlab.groqModel": {
          "type": "string",
          "default": "llama3-8b-8192",
          "description": "Groq model to use. Available models: llama3-8b-8192, llama3-70b-8192, llama-3.1-8b-instant, llama-3.3-70b-versatile, gemma2-9b-it, qwen-qwq-32b, deepseek-r1-distill-llama-70b, mistral-saba-24b, and more. Check https://console.groq.com/docs/models for the full list."
        },
        "mdlab.openaiModel": {
          "type": "string",
          "default": "gpt-4-turbo",
          "description": "Check out available models here: https://platform.openai.com/docs/models/overview"
        }
      }
    },
    "commands": [
      {
        "command": "mdlab.search",
        "title": "mdlab: Search notes",
        "description": "Adds notes base path to workspace and opens `find in files`"
      },
      {
        "command": "mdlab.openMain",
        "title": "mdlab: Open generated code",
        "description": "Opens the code being generated, by adding the folder to the workspace"
      },
      {
        "command": "mdlab.deleteTemp",
        "title": "mdlab: Delete Tempory Folder",
        "description": "Delete the temporary folder with all the generated code files"
      }
    ],
    "keybindings": [
      {
        "key": "alt+f",
        "command": "mdlab.search"
      },
      {
        "key": "alt+o",
        "command": "mdlab.openMain"
      }
    ],
    "languages": [
      {
        "id": "openai",
        "aliases": [
          "OpenAI",
          "openai"
        ],
        "extensions": [],
        "firstLine": "^#!.*\\b(openai)\\b"
      },
      {
        "id": "groq",
        "aliases": [
          "Groq",
          "groq"
        ],
        "extensions": [],
        "firstLine": "^#!.*\\b(groq)\\b"
      }
    ],
    "notebooks": [
      {
        "type": "mdlab",
        "displayName": "Markdown Lab",
        "priority": "default",
        "selector": [
          {
            "filenamePattern": "*.{md,mdx,markdown}"
          }
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "package": "vsce package",
    "install-extension": "cursor --install-extension $(ls mdlab-*) --force",
    "i": "npm run package && npm run install-extension",
    "test": "npm run compile && node ./out/kernel-e2e.test.js",
    "lint": "eslint src --ext .ts,.tsx",
    "lint:fix": "eslint src --ext .ts,.tsx --fix",
    "format": "prettier --write \"src/**/*.{ts,tsx,js,jsx,json}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,js,jsx,json}\""
  },
  "devDependencies": {
    "@types/node": "^22.15.23",
    "@types/vscode": "^1.96.2",
    "@typescript-eslint/eslint-plugin": "^8.33.0",
    "@typescript-eslint/parser": "^8.33.0",
    "eslint": "^9.27.0",
    "prettier": "^3.5.3",
    "typescript": "^5.8.3",
    "@vscode/vsce": "^3.4.2"
  }
}
